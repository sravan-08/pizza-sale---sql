Basic:

1. Retrieve the total number of orders placed.

SELECT 
    COUNT(order_id) AS total_orders
FROM
    orders;

2. Calculate the total revenue generated from pizza sales.

SELECT 
    round(sum(orders_details.quantity * pizzas.price),2)
FROM
    orders_details
        JOIN
    pizzas ON pizzas.pizza_id = orders_details.pizza_id;

3. Identify the highest-priced pizza.

SELECT 
    pizza_types.name, pizzas.price
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1;

4. Identify the most common pizza size ordered.

SELECT 
    pizzas.size,
    COUNT(orders_details.order_details_id) AS total_orders
FROM
    pizzas
        JOIN
    orders_details ON pizzas.pizza_id = orders_details.pizza_id
GROUP BY pizzas.size;

5. List the top 5 most ordered pizza types along with their quantities.

SELECT 
    pizza_types.name,
    SUM(orders_details.quantity) AS total_orders
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY total_orders DESC
LIMIT 5;


Intermediate:

6. Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT 
    pizza_types.category,
    SUM(orders_details.quantity) AS total_orders
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    orders_details ON pizzas.pizza_id = orders_details.pizza_id
GROUP BY category
ORDER BY total_orders DESC;

7. Determine the distribution of orders by hour of the day.

SELECT 
    HOUR(order_time) AS hour, COUNT(order_id) AS orders
FROM
    orders
GROUP BY HOUR(order_time);

8. Join relevant tables to find the category-wise distribution of pizzas.

SELECT 
    category, COUNT(pizza_type_id) AS pizza
FROM
    pizza_types
GROUP BY category;

9. Group the orders by date and calculate the average number of pizzas ordered per day.

SELECT 
    ROUND(AVG(qua), 0)
FROM
    (SELECT 
        orders.order_date, SUM(orders_details.quantity) AS qua
    FROM
        orders
    JOIN orders_details ON orders.order_id = orders_details.order_id
    GROUP BY order_date) AS table1;

10. Determine the top 3 most ordered pizza types based on revenue.

SELECT 
    pizza_types.name,
    ROUND(SUM(pizzas.price * orders_details.quantity),
            0) AS revenue
FROM
    pizzas
        JOIN
    pizza_types ON pizzas.pizza_type_id = pizza_types.pizza_type_id
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY revenue DESC
LIMIT 3;

Advanced:

11. Calculate the percentage contribution of each pizza type to total revenue.

SELECT 
    pizza_types.category,
    SUM(pizzas.price * orders_details.quantity) / (SELECT 
            ROUND(SUM(orders_details.quantity * pizzas.price),
                        2)
        FROM
            orders_details
                JOIN
            pizzas ON pizzas.pizza_id = orders_details.pizza_id) * 100 AS revunue
FROM
    pizzas
        JOIN
    pizza_types ON pizzas.pizza_type_id = pizza_types.pizza_type_id
        JOIN
    orders_details ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY revunue DESC;

12. Analyze the cumulative revenue generated over time.

select order_date,round(sum(revenue) over(order by order_date),2) as cumulative_revenue from
(select orders.order_date, sum(pizzas.price * orders_details.quantity)
 as revenue 
from pizzas join orders_details on pizzas.pizza_id=orders_details.pizza_id 
join orders on orders.order_id = orders_details.order_id 
group by orders.order_date)as sales;

13. Determine the top 3 most ordered pizza types based on revenue for each pizza category.

select category,name,revenue,rank() over(partition by category order by revenue desc) as ranks from
(select pizza_types.category, pizza_types.name, sum(pizzas.price * orders_details.quantity) as revenue 
from pizza_types join pizzas on pizza_types.pizza_type_id= pizzas.pizza_type_id
join orders_details on orders_details.pizza_id = pizzas.pizza_id group by pizza_types.category,pizza_types.name) as p1;
